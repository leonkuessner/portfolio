[{"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\index.js":"1","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\App.js":"2","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\Navbar.js":"3","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\LogIn.js":"4","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\pages\\homepage\\Homepage.js":"5","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\pages\\aboutMe\\AboutMe.js":"6","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\pages\\contact\\Contact.js":"7","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\pages\\projects\\Projects.js":"8","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\pages\\aboutMe\\Data.js":"9","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\pages\\projects\\ProjectsSlider.js":"10","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\pages\\projects\\ProjectsData.js":"11","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\Admin.js":"12","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\PrivateRoute.js":"13","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\FakeAuth.js":"14","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\admin-pages\\Projects.js":"15","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\admin-pages\\Dashboard.js":"16","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\admin-pages\\FileUploads\\ProjectsFileUpload.js":"17","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\admin-pages\\FileUploads\\AddProject.js":"18","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\admin-pages\\FileUploads\\ProjectEdit.js":"19"},{"size":154,"mtime":1609434607899,"results":"20","hashOfConfig":"21"},{"size":1720,"mtime":1609784369593,"results":"22","hashOfConfig":"21"},{"size":1480,"mtime":1609784376085,"results":"23","hashOfConfig":"21"},{"size":2489,"mtime":1609525715183,"results":"24","hashOfConfig":"21"},{"size":3975,"mtime":1609252847125,"results":"25","hashOfConfig":"21"},{"size":6302,"mtime":1609536792137,"results":"26","hashOfConfig":"21"},{"size":5093,"mtime":1609243935561,"results":"27","hashOfConfig":"21"},{"size":3446,"mtime":1609252845251,"results":"28","hashOfConfig":"21"},{"size":2088,"mtime":1609118068460,"results":"29","hashOfConfig":"21"},{"size":1029,"mtime":1609152626061,"results":"30","hashOfConfig":"21"},{"size":4189,"mtime":1609170434921,"results":"31","hashOfConfig":"21"},{"size":835,"mtime":1609525763039,"results":"32","hashOfConfig":"21"},{"size":427,"mtime":1609440712509,"results":"33","hashOfConfig":"21"},{"size":299,"mtime":1609440716414,"results":"34","hashOfConfig":"21"},{"size":2151,"mtime":1609678094558,"results":"35","hashOfConfig":"21"},{"size":221,"mtime":1609525501207,"results":"36","hashOfConfig":"21"},{"size":3704,"mtime":1609629188523,"results":"37","hashOfConfig":"21"},{"size":8375,"mtime":1609789816597,"results":"38","hashOfConfig":"21"},{"size":8409,"mtime":1609791252506,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1oxdqt2",{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\index.js",[],["85","86"],"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\App.js",["87","88","89","90"],"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\LogIn.js",["91","92","93"],"import React, { Component, useState } from 'react'\r\nimport { Redirect, Route, useHistory, useLocation } from 'react-router-dom'\r\nimport { fakeAuth } from './FakeAuth'\r\nimport './styles/LogIn.css'\r\n  \r\nexport default function Login() {\r\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false)\r\n    const [logInData, setLogInData] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const { state } = useLocation()\r\n\r\n    const login = () => fakeAuth.authenticate(() => {\r\n        setRedirectToReferrer(true)\r\n    })\r\n\r\n    if (redirectToReferrer === true) {\r\n        console.log(state)\r\n        return <Redirect to={state?.from || '/'} />\r\n    }\r\n\r\n    // function handleChange(e) {\r\n    //     console.log(e)\r\n    //     let currentName = e.target.id\r\n    //     setLogInData({...logInData, currentName: e.target.value})\r\n    //     console.log(logInData)\r\n    // }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        console.log('The form was submitted with the following data:');\r\n        console.log(logInData);\r\n    }\r\n\r\n    return (\r\n        <div className=\"logIn\">\r\n            <div className=\"logIn__vert\">\r\n            <div className=\"logIn__FormWrapper\">\r\n                <h2 className=\"LogIn__header\">Sign Up</h2>\r\n                <form onSubmit={handleSubmit} className=\"FormFields\">\r\n                    <div className=\"FormField\">\r\n                        <input type=\"text\" id=\"username\" className=\"FormField__Input\" name=\"username\" onChange={(e) => setLogInData({...logInData, username: e.target.value})} required/>\r\n                        <label className=\"FormField__Label\" htmlFor=\"username\">\r\n                            <span className='FormField__title'>Username</span>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"FormField\">\r\n                        <input type=\"password\" id=\"password\" className=\"FormField__Input\" name=\"password\" onChange={(e) => setLogInData({...logInData, password: e.target.value})} required/>\r\n                        <label className=\"FormField__Label\" htmlFor=\"password\">\r\n                            <span className='FormField__title'>Password</span>\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"space-filler\"></div>\r\n\r\n                    <button onClick={login}>Log In</button>\r\n                </form>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\pages\\homepage\\Homepage.js",[],"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\pages\\aboutMe\\AboutMe.js",[],"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\pages\\contact\\Contact.js",[],"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\pages\\projects\\Projects.js",[],"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\pages\\aboutMe\\Data.js",[],"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\pages\\projects\\ProjectsSlider.js",[],"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\pages\\projects\\ProjectsData.js",[],"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\Admin.js",[],"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\PrivateRoute.js",[],"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\FakeAuth.js",["94"],"import React from 'react'\r\n\r\nexport const fakeAuth = {\r\n    isAuthenticated: false,\r\n    authenticate(cb) {\r\n      this.isAuthenticated = true\r\n      setTimeout(cb, 100) // fake async\r\n    },\r\n    signout(cb) {\r\n      this.isAuthenticated = false\r\n      setTimeout(cb, 100) // fake async\r\n    }\r\n}\r\n","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\admin-pages\\Projects.js",["95","96","97"],"import React, { useEffect, useState } from 'react'\r\nimport './styles/Projects.css'\r\nimport axios from 'axios'\r\n// import ProjectsFileUpload from './FileUploads/ProjectsFileUpload'\r\nimport Addproject from './FileUploads/AddProject'\r\nimport ProjectEdit from './FileUploads/ProjectEdit'\r\n\r\nfunction Projects() {\r\n    // const [existingProjects, setExistingProjects] = useState([])\r\n    // const [editCond, setEditCond] = useState(\"\")\r\n    // const shortProjectVars = [\"title\", \"languages\"]\r\n    // const longProjectVars = [\"title\", \"languages\", \"description\"]\r\n\r\n\r\n    // const [newProject, setNewProject] = useState({\r\n    //     title: \"\",\r\n    //     languages: \"\",\r\n    //     description: \"\",\r\n    // })\r\n\r\n    // const getExistingProjects = () => {\r\n    //     axios.get(\"http://localhost:5000/getExisting\").then((response) =>{\r\n    //         setExistingProjects(response.data)\r\n    //         console.log(response.data)\r\n    //     })\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     getExistingProjects()\r\n    // }, [])\r\n\r\n    // const addProject = () => {\r\n    //     console.log(newProject)\r\n    //     axios.post(\"http://localhost:5000/addProject\", {\r\n    //         title: newProject.title,\r\n    //         languages: newProject.languages,\r\n    //         description: newProject.description,\r\n    //         thumbnail: newProject.thumbnail,\r\n    //     }).then(() => {\r\n    //         console.log(\"Success\")\r\n    //         getExistingProjects()\r\n    //     })\r\n    // }\r\n\r\n    // const [newProjectView, setNewProjectView] = useState(false)\r\n\r\n    return (\r\n        <div className=\"admin__projects\">\r\n            <div className=\"adminProjects__existing-projects\">\r\n                <ProjectEdit/>\r\n            </div>\r\n            <Addproject/>\r\n            {/* {console.log(uploadedThumbnail)} */}\r\n            {/* <div>\r\n                {newProjectView ? \r\n                <div>\r\n                    <Addproject />\r\n                </div> : null\r\n                }\r\n            </div> */}\r\n            {/* <button onClick={() => setNewProjectView(prev => !prev)} >Add New</button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\admin-pages\\Dashboard.js",[],"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\admin-pages\\FileUploads\\ProjectsFileUpload.js",["98","99","100","101"],"import React, { useState } from 'react'\r\nimport Message from './ProjectsMessage'\r\nimport axios from 'axios'\r\n\r\nconst ProjectsFileUpload\r\n = () => {\r\n\r\n    const [file, setFile] = useState();\r\n    const [projectName, setProjectName] = useState({ title: \"\", index: 0});\r\n    const [filename, setFilename] = useState('Choose File');\r\n    const [uploadedFile, setUploadedFile] = useState({})\r\n    const [message, setMessage] = useState('')\r\n    const [uploadPercentage, setUploadPercentage] = useState(0)\r\n\r\n    const onChange = e => {\r\n        e.preventDefault()\r\n        // console.log(e)\r\n        console.log(projectName)\r\n        // console.log(e.target.files.length)\r\n        if (e.target.files.length !== 0) {\r\n        // if (e.target.file)\r\n            setFile(e.target.files[0])\r\n            setFilename(e.target.files[0].name)\r\n        }\r\n    }\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        setUploadedFile(null)\r\n        setProjectName(prev => {\r\n            return { ...projectName, index: prev.index + 1}\r\n        })\r\n        const formData = new FormData();\r\n        formData.append('file', file)\r\n        formData.append('title', projectName.title)\r\n        formData.append('index', projectName.index)\r\n        console.log(formData)\r\n\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/upload', formData, \r\n            {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            );\r\n\r\n            const { fileName, filePath } = res.data;\r\n            setUploadedFile({ fileName, filePath });\r\n\r\n            setMessage('File Uploaded!')\r\n        }catch(err) {\r\n            if(err.response.status === 500) {\r\n                setMessage('There was a problem with the server')\r\n            } else {\r\n                setMessage(err.response.data.msg)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <input type=\"text\" onChange={(e) => setProjectName({...projectName, title: e.target.value})}/>\r\n        {/* <input type=\"text\" onChange={(e) => console.log(e)}/> */}\r\n        {message ? <Message msg={message}/> : null}\r\n            <form onSubmit={onSubmit}>\r\n                {/* <div className='custom-file mb-4'>\r\n                <input\r\n                    type='file'\r\n                    className='custom-file-input'\r\n                    id='customFile'\r\n                    onChange={onChange}\r\n                />\r\n                <label className='custom-file-label' htmlFor='customFile'>\r\n                    {filename}\r\n                </label>\r\n                </div>\r\n\r\n                <input\r\n                type='submit'\r\n                value='Upload'\r\n                className='btn btn-primary btn-block mt-4'\r\n                /> */}\r\n                <div className=\"input-group mb-3\">\r\n                <input type=\"file\" className=\"form-control\" id=\"inputGroupFile02\" onChange={onChange}/>\r\n                \r\n                <input\r\n                type='submit'\r\n                value='Upload'\r\n                className='btn btn-primary btn-block mt-4'\r\n                />\r\n                </div>\r\n            </form>\r\n            \r\n\r\n            { uploadedFile ? <div className=\"row mt-5\">\r\n                <div className=\"col-md-6 m-auto\">\r\n                    <h3 className=\"text-center\">\r\n                        { uploadedFile.fileName }\r\n                        {console.log(uploadedFile)}\r\n                        <img src={ uploadedFile.filePath }style={{width: '100px'}}/>\r\n                    </h3>\r\n                </div>\r\n            </div> : null}\r\n        </> \r\n    )\r\n}\r\n\r\nexport default ProjectsFileUpload\r\n",["102","103"],"C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\admin-pages\\FileUploads\\AddProject.js",["104","105","106","107","108","109"],"import React, { useState } from 'react'\r\nimport './AddProjectsStyles/AddProjects.css'\r\nimport axios from 'axios'\r\n// import {getExistingProjects} from './ProjectEdit'\r\n\r\n\r\nfunction Addproject() {\r\n    const [newProjectView, setNewProjectView] = useState(false)\r\n\r\n    const [projectText, setProjectText] = useState({\r\n        title: \"\",\r\n        languages: \"\",\r\n        description: \"\",\r\n    })\r\n    const [thumbnail, setThumbnail] = useState()\r\n    const [slideshow, setSlideshow] = useState()\r\n    const [uploadedThumbnail, setUploadedThumbnail] = useState({})\r\n    const [uploadedSlideshow, setUploadedSlideshow] = useState([])\r\n    console.log(uploadedSlideshow)\r\n    const [slideshowIndex, setSlideshowIndex] = useState(0)\r\n\r\n    const onChangeThumbnail = (e) => {\r\n        e.preventDefault()\r\n        console.log(e)\r\n        if (e.target.files.length !== 0) {\r\n            setThumbnail(e.target.files[0])\r\n        }\r\n    }\r\n    const onChangeSlideshow = (e) => {\r\n        e.preventDefault()\r\n        console.log(e)\r\n        if (e.target.files.length !== 0) {\r\n            setSlideshow(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmitThumbnail = async e => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('thumbnail', thumbnail)\r\n        formData.append('title', projectText.title)\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/upload-thumbnail', formData, \r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n            )\r\n            console.log(res.data)\r\n            const { fileName, filePath } = res.data.thumbnail\r\n            setUploadedThumbnail({ fileName, filePath })\r\n            console.log('File Uploaded!')\r\n        } catch(err) {\r\n            if (err.response.status === 500) {\r\n                console.log(\"Problem with Server\")\r\n            } else {\r\n                console.log(err.response.data.msg)\r\n            }\r\n        }\r\n    }\r\n    const onSubmitSlideshow = async e => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('title', projectText.title)\r\n        formData.append('slideshow', slideshow)\r\n        formData.append('index', uploadedSlideshow.length)\r\n\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/upload-slideshow', formData, \r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n            )\r\n            console.log(res.data.slideshow)\r\n            const { fileName, filePath } = res.data.slideshow\r\n            setUploadedSlideshow([...uploadedSlideshow, filePath ])\r\n            console.log('File Uploaded!')\r\n        } catch(err) {\r\n            console.log(err)\r\n            if (err.response.status === 500) {\r\n                console.log(\"Problem with Server\")\r\n            } else {\r\n                console.log(err.response.data.msg)\r\n            }\r\n        }\r\n    }\r\n\r\n    const uploadProject = async() => {\r\n\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/upload-project', {\r\n                thumbnailPath: uploadedThumbnail.filePath,\r\n                title: projectText.title,\r\n                languages: projectText.languages,\r\n                description: projectText.description,\r\n                slideshowPaths: uploadedSlideshow\r\n            }\r\n            )\r\n        } catch(err) {\r\n            if (err.response.status === 500) {\r\n                console.log(\"Problem with Server\")\r\n            } else {\r\n                console.log(err.response.data.msg)\r\n            }\r\n        }\r\n        // getExistingProjects()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {newProjectView ?                  \r\n        \r\n            <div className=\"addProjects__container\">\r\n                <div className=\"addProjects__text-inputs\">\r\n                    <h2>Text Inputs</h2>\r\n                    <input \r\n                        onChange={(e) => setProjectText({...projectText, title: e.target.value})} \r\n                        placeholder=\"Title\" \r\n                        type=\"text\"\r\n                    />\r\n                    <input\r\n                        onChange={(e) => setProjectText({...projectText, languages: e.target.value})}\r\n                        placeholder=\"Languages\" \r\n                        type=\"text\"\r\n                    />\r\n                    <textarea\r\n                        onChange={(e) => setProjectText({...projectText, description: e.target.value})} \r\n                        placeholder=\"Description\" \r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n\r\n                \r\n                <div className=\"addProjects__image-inputs\">\r\n                    <h2>Image Inputs</h2>\r\n                    <div className=\"addProjects__thumbnail-container addProjects__image-sub\">\r\n                        <h4>Thumbnail Image</h4>\r\n                        <form onSubmit={onSubmitThumbnail} className=\"addProjects__thumbnail-input\">\r\n                            <div className=\"input-group mb-3\"\r\n                                onClick={() => setUploadedThumbnail()}>\r\n                                <input \r\n                                    onChange={onChangeThumbnail}\r\n                                    type=\"file\" \r\n                                    className=\"form-control\" \r\n                                    id=\"inputGroupFile02\"/>\r\n                            </div>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-primary addProjects__upload-btn\">\r\n                                Upload\r\n                            </button>\r\n                        </form>\r\n                        <div className=\"addProjects__uploaded-img-container\">\r\n                        {console.log(uploadedThumbnail)}\r\n                            {uploadedThumbnail ? \r\n                                <img \r\n                                    src={uploadedThumbnail.filePath} \r\n                                    style={{ \r\n                                        height: '100%',\r\n                                        width: 'auto'\r\n                                    }}/>\r\n                            : null} \r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"addProjects__slideshow-container addProjects__image-sub\">\r\n                        <h4>Slideshow Images</h4>\r\n                        <form onSubmit={onSubmitSlideshow} className=\"addProjects__thumbnail-input\">\r\n                            <div className=\"input-group mb-3\">\r\n                                <input \r\n                                    onChange={onChangeSlideshow}\r\n                                    type=\"file\" \r\n                                    className=\"form-control\" \r\n                                    id=\"inputGroupFile02\"/>\r\n                            </div>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-primary addProjects__upload-btn\">\r\n                                Upload\r\n                            </button>\r\n                        </form>\r\n                        <div className=\"addProject__show-slides\">\r\n                            {uploadedSlideshow ? \r\n                                uploadedSlideshow.map((slide, key) => {\r\n                                    return (\r\n                                    <div \r\n                                        key={key} \r\n                                        className=\"addProject__slide-preview\">\r\n                                        <img src={slide} style={{width: \"60px\", margin: \"0 5px\"}}/>\r\n                                    </div>\r\n                                    )\r\n                                }) \r\n                            : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div onClick={uploadProject} className=\"addProjects__add-button\">\r\n                    <button>Upload</button>\r\n                </div>\r\n            </div>\r\n             : <button onClick={() => setNewProjectView(prev => !prev)} >Add New</button>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addproject\r\n","C:\\Users\\Walter Küssner\\Desktop\\Leon Codes\\portfolio\\client\\src\\components\\admin-section\\admin-pages\\FileUploads\\ProjectEdit.js",["110","111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":3,"column":34,"nodeType":"118","messageId":"119","endLine":3,"endColumn":42},{"ruleId":"116","severity":1,"message":"120","line":3,"column":59,"nodeType":"118","messageId":"119","endLine":3,"endColumn":70},{"ruleId":"116","severity":1,"message":"121","line":11,"column":10,"nodeType":"118","messageId":"119","endLine":11,"endColumn":19},{"ruleId":"116","severity":1,"message":"122","line":11,"column":21,"nodeType":"118","messageId":"119","endLine":11,"endColumn":29},{"ruleId":"116","severity":1,"message":"121","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"123","line":2,"column":20,"nodeType":"118","messageId":"119","endLine":2,"endColumn":25},{"ruleId":"116","severity":1,"message":"124","line":2,"column":27,"nodeType":"118","messageId":"119","endLine":2,"endColumn":37},{"ruleId":"116","severity":1,"message":"125","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"126","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"122","line":1,"column":28,"nodeType":"118","messageId":"119","endLine":1,"endColumn":36},{"ruleId":"116","severity":1,"message":"127","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":13},{"ruleId":"116","severity":1,"message":"128","line":10,"column":12,"nodeType":"118","messageId":"119","endLine":10,"endColumn":20},{"ruleId":"116","severity":1,"message":"129","line":13,"column":12,"nodeType":"118","messageId":"119","endLine":13,"endColumn":28},{"ruleId":"116","severity":1,"message":"130","line":13,"column":30,"nodeType":"118","messageId":"119","endLine":13,"endColumn":49},{"ruleId":"131","severity":1,"message":"132","line":101,"column":25,"nodeType":"133","endLine":101,"endColumn":85},{"ruleId":"112","replacedBy":"134"},{"ruleId":"114","replacedBy":"135"},{"ruleId":"116","severity":1,"message":"136","line":20,"column":12,"nodeType":"118","messageId":"119","endLine":20,"endColumn":26},{"ruleId":"116","severity":1,"message":"137","line":20,"column":28,"nodeType":"118","messageId":"119","endLine":20,"endColumn":45},{"ruleId":"116","severity":1,"message":"138","line":78,"column":21,"nodeType":"118","messageId":"119","endLine":78,"endColumn":29},{"ruleId":"116","severity":1,"message":"139","line":94,"column":19,"nodeType":"118","messageId":"119","endLine":94,"endColumn":22},{"ruleId":"131","severity":1,"message":"132","line":158,"column":33,"nodeType":"133","endLine":163,"endColumn":41},{"ruleId":"131","severity":1,"message":"132","line":192,"column":41,"nodeType":"133","endLine":192,"endColumn":100},{"ruleId":"140","severity":1,"message":"141","line":39,"column":8,"nodeType":"142","endLine":39,"endColumn":10,"suggestions":"143"},{"ruleId":"131","severity":1,"message":"132","line":50,"column":21,"nodeType":"133","endLine":50,"endColumn":80},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'Route' is defined but never used.","'useHistory' is defined but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'filename' is assigned a value but never used.","'uploadPercentage' is assigned a value but never used.","'setUploadPercentage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["144"],["145"],"'slideshowIndex' is assigned a value but never used.","'setSlideshowIndex' is assigned a value but never used.","'fileName' is assigned a value but never used.","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uploadExisting'. Either include it or remove the dependency array.","ArrayExpression",["146"],"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},"Update the dependencies array to be: [uploadExisting]",{"range":"149","text":"150"},[1121,1123],"[uploadExisting]"]